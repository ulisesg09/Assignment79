{"code":"var core_1 = require('@angular/core');\r\nvar ionic_angular_1 = require('ionic-angular');\r\nvar Moment = require('moment');\r\nvar rxjs_1 = require('rxjs');\r\nvar collections_1 = require('../../../../imports/collections');\r\nvar models_1 = require('../../../../imports/models');\r\nvar messages_1 = require('../messages/messages');\r\nvar chats_html_1 = require('./chats.html');\r\nvar ChatsPage = (function () {\r\n    function ChatsPage(navCtrl) {\r\n        this.navCtrl = navCtrl;\r\n    }\r\n    ChatsPage.prototype.ngOnInit = function () {\r\n        this.chats = collections_1.Chats\r\n            .find({})\r\n            .mergeMap(function (chats) {\r\n            return rxjs_1.Observable.combineLatest.apply(rxjs_1.Observable, chats.map(function (chat) {\r\n                return collections_1.Messages\r\n                    .find({ chatId: chat._id })\r\n                    .startWith(null)\r\n                    .map(function (messages) {\r\n                    if (messages)\r\n                        chat.lastMessage = messages[0];\r\n                    return chat;\r\n                });\r\n            }));\r\n        }).zone();\r\n    };\r\n    ChatsPage.prototype.showMessages = function (chat) {\r\n        this.navCtrl.push(messages_1.MessagesPage, { chat: chat });\r\n    };\r\n    ChatsPage.prototype.findChats = function () {\r\n        return rxjs_1.Observable.of([\r\n            {\r\n                _id: '0',\r\n                title: 'Ethan Gonzalez',\r\n                picture: 'https://randomuser.me/api/portraits/thumb/men/1.jpg',\r\n                lastMessage: {\r\n                    content: 'You on your way?',\r\n                    createdAt: Moment().subtract(1, 'hours').toDate(),\r\n                    type: models_1.MessageType.TEXT\r\n                }\r\n            },\r\n            {\r\n                _id: '1',\r\n                title: 'Bryan Wallace',\r\n                picture: 'https://randomuser.me/api/portraits/thumb/lego/1.jpg',\r\n                lastMessage: {\r\n                    content: 'Hey, it\\'s me',\r\n                    createdAt: Moment().subtract(2, 'hours').toDate(),\r\n                    type: models_1.MessageType.TEXT\r\n                }\r\n            },\r\n            {\r\n                _id: '2',\r\n                title: 'Avery Stewart',\r\n                picture: 'https://randomuser.me/api/portraits/thumb/women/1.jpg',\r\n                lastMessage: {\r\n                    content: 'I should buy a boat',\r\n                    createdAt: Moment().subtract(1, 'days').toDate(),\r\n                    type: models_1.MessageType.TEXT\r\n                }\r\n            },\r\n            {\r\n                _id: '3',\r\n                title: 'Katie Peterson',\r\n                picture: 'https://randomuser.me/api/portraits/thumb/women/2.jpg',\r\n                lastMessage: {\r\n                    content: 'Look at my mukluks!',\r\n                    createdAt: Moment().subtract(4, 'days').toDate(),\r\n                    type: models_1.MessageType.TEXT\r\n                }\r\n            },\r\n            {\r\n                _id: '4',\r\n                title: 'Ray Edwards',\r\n                picture: 'https://randomuser.me/api/portraits/thumb/men/2.jpg',\r\n                lastMessage: {\r\n                    content: 'This is wicked good ice cream.',\r\n                    createdAt: Moment().subtract(2, 'weeks').toDate(),\r\n                    type: models_1.MessageType.TEXT\r\n                }\r\n            }\r\n        ]);\r\n    };\r\n    ChatsPage.prototype.removeChat = function (chat) {\r\n        collections_1.Chats.remove({ _id: chat._id }).subscribe(function () {\r\n        });\r\n    };\r\n    ChatsPage = __decorate([\r\n        core_1.Component({\r\n            template: chats_html_1.default\r\n        }), \r\n        __metadata('design:paramtypes', [Object])\r\n    ], ChatsPage);\r\n    return ChatsPage;\r\n}());\r\nexports.ChatsPage = ChatsPage;\r\n//# sourceMappingURL=chats.js.map","sourceMap":{"version":3,"file":"chats.js","sourceRoot":"","sources":["client/imports/pages/chats/chats.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInIt } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport * as Moment from 'moment';\r\nimport { Observable } from 'rxjs';\r\nimport { Chats, Messages } from '../../../../imports/collections';\r\nimport { Chat, MessageType } from '../../../../imports/models';\r\nimport { MessagesPage } from '../messages/messages';\r\nimport template from './chats.html';\r\n \r\n@Component({\r\n  template\r\n})\r\nexport class ChatsPage implements OnInit {\r\n  chats;\r\n \r\n  constructor(private navCtrl: NavController) {\r\n  }\r\n \r\n  ngOnInit() {\r\n    this.chats = Chats\r\n      .find({})\r\n      .mergeMap((chats: Chat[]) =>\r\n        Observable.combineLatest(\r\n          ...chats.map((chat: Chat) =>\r\n            Messages\r\n              .find({chatId: chat._id})\r\n              .startWith(null)\r\n              .map(messages => {\r\n                if (messages) chat.lastMessage = messages[0];\r\n                return chat;\r\n              })\r\n          )\r\n        )\r\n      ).zone();\r\n  }\r\n\r\n  showMessages(chat): void {\r\n    this.navCtrl.push(MessagesPage, {chat});\r\n  }\r\n \r\n \r\n  private findChats(): Observable<any[]> {\r\n    return Observable.of([\r\n      {\r\n        _id: '0',\r\n        title: 'Ethan Gonzalez',\r\n         picture: 'https://randomuser.me/api/portraits/thumb/men/1.jpg',\r\n        lastMessage: {\r\n          content: 'You on your way?',\r\n          createdAt: Moment().subtract(1, 'hours').toDate(),\r\n          type: MessageType.TEXT\r\n        }\r\n      },\r\n      {\r\n        _id: '1',\r\n        title: 'Bryan Wallace',\r\n        picture: 'https://randomuser.me/api/portraits/thumb/lego/1.jpg',\r\n        lastMessage: {\r\n          content: 'Hey, it\\'s me',\r\n          createdAt: Moment().subtract(2, 'hours').toDate(),\r\n          type: MessageType.TEXT\r\n        }\r\n      },\r\n      {\r\n        _id: '2',\r\n        title: 'Avery Stewart',\r\n        picture: 'https://randomuser.me/api/portraits/thumb/women/1.jpg',\r\n        lastMessage: {\r\n          content: 'I should buy a boat',\r\n          createdAt: Moment().subtract(1, 'days').toDate(),\r\n          type: MessageType.TEXT\r\n        }\r\n      },\r\n      {\r\n        _id: '3',\r\n        title: 'Katie Peterson',\r\n        picture: 'https://randomuser.me/api/portraits/thumb/women/2.jpg',\r\n        lastMessage: {\r\n          content: 'Look at my mukluks!',\r\n          createdAt: Moment().subtract(4, 'days').toDate(),\r\n          type: MessageType.TEXT\r\n        }\r\n      },\r\n      {\r\n        _id: '4',\r\n        title: 'Ray Edwards',\r\n        picture: 'https://randomuser.me/api/portraits/thumb/men/2.jpg',\r\n        lastMessage: {\r\n          content: 'This is wicked good ice cream.',\r\n          createdAt: Moment().subtract(2, 'weeks').toDate(),\r\n          type: MessageType.TEXT\r\n        }\r\n       }\r\n    ]);\r\n   }\r\n \r\n   removeChat(chat: Chat): void {\r\n    Chats.remove({_id: chat._id}).subscribe(() => {\r\n    });\r\n  }\r\n}"]},"version":"1","isExternal":true,"references":{"files":[],"modules":["imports/collections/index.ts","imports/models.ts","client/imports/pages/messages/messages.ts"],"typings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2304,"fileName":"client/imports/pages/chats/chats.ts","message":"Cannot find name 'OnInit'.","line":13,"column":35},{"code":2304,"fileName":"client/imports/pages/chats/chats.ts","message":"Cannot find name 'NavController'.","line":16,"column":32},{"code":2304,"fileName":"client/imports/pages/chats/chats.ts","message":"Cannot find name 'Observable'.","line":42,"column":24}]},"hash":"5ad4284861af2d59d214a233d6bb7edd08acd6d1"}